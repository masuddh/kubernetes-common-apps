kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    app.kubernetes.io/part-of: "redis"
    app.kubernetes.io/instance: "redis"
    app.kubernetes.io/component: "backend"
    app.kubernetes.io/name: "redis"
  name: redis
  namespace: dev
  labels:
    app: redis
    enviroment: dev
    tier: backend
    release: beta
spec:
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis:alpine
          imagePullPolicy: Always
          name: redis
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --loglevel debug",
            ]
          ports:
            - containerPort: 6379
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources:
            limits:
              cpu: "128Mi"
              memory: "512Mi"
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          env:
            - name: TZ
              value: "Asia/Jakarta"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
